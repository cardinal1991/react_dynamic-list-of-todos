{"version":3,"sources":["api.ts","components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","TodoList","setHandle","setSelectedTodo","filter","searchText","useState","todos","setTodos","useEffect","filteredTodos","todo","title","includes","completed","className","map","id","type","onClick","TodoFilter","setFilter","setSearchText","handle","value","onChange","e","target","placeholder","style","pointerEvents","Loader","TodoModal","loading","setLoading","user","setUser","userId","undefined","userData","catch","error","Error","href","email","name","App","selectedTodo","ReactDOM","render","document","getElementById"],"mappings":"0NAcA,SAASA,EAAOC,GAEd,IARYC,EAQNC,EAZS,iEAYYF,EAAM,QAGjC,OAXYC,EAWA,IAVL,IAAIE,SAAQ,SAAAC,GACjBC,WAAWD,EAASH,OAUnBK,MAAK,kBAAMC,MAAML,MACjBI,MAAK,SAAAE,GAAG,OAAIA,EAAIC,UAGd,I,OCPMC,EAA4B,SAAC,GAEnC,IADLC,EACI,EADJA,UAAWC,EACP,EADOA,gBAAiBC,EACxB,EADwBA,OAAQC,EAChC,EADgCA,WAEpC,EAA0BC,mBAAiB,IAA3C,mBAAOC,EAAP,KAAcC,EAAd,KAEAC,qBAAU,WDEkBnB,EAAY,UCD3BO,MAAK,SAAAG,GACdQ,EAASR,SAIb,IAAMU,EAAgBH,EAAMH,QAAO,SAACO,GAClC,MAAe,QAAXP,EACKO,EAAKC,MAAMC,SAASR,GAGd,cAAXD,EACKO,EAAKG,WAAaH,EAAKC,MAAMC,SAASR,GAGhC,WAAXD,IACMO,EAAKG,WAAaH,EAAKC,MAAMC,SAASR,MAMlD,OACE,wBAAOU,UAAU,+BAAjB,UACE,gCACE,+BACE,mCACA,6BACE,sBAAMA,UAAU,OAAhB,SACE,mBAAGA,UAAU,qBAGjB,uCACA,wCAIJ,uCAEGL,QAFH,IAEGA,OAFH,EAEGA,EAAeM,KAAI,SAAAL,GAClB,OACE,qBAEE,UAAQ,OAFV,UAIE,oBAAII,UAAU,eAAd,SAA8BJ,EAAKM,KACnC,oBAAIF,UAAU,eAAd,UACsB,IAAnBJ,EAAKG,WAEJ,sBAAMC,UAAU,OAAO,UAAQ,gBAA/B,SACE,mBAAGA,UAAU,qBAInB,oBAAIA,UAAU,2BAAd,SACE,mBACEA,WACsB,IAAnBJ,EAAKG,UACF,mBACA,kBAJR,SAYGH,EAAKC,UAGV,oBAAIG,UAAU,8BAAd,SACE,wBACE,UAAQ,eACRA,UAAU,SACVG,KAAK,SACLC,QACE,WACEjB,GAAU,GACVC,EAAgBQ,IAPtB,SAWE,sBAAMI,UAAU,OAAhB,SACE,mBAAGA,UAAU,uBAzCdJ,EAAKM,aCtDXG,EAA8B,SAAC,GAErC,IADLhB,EACI,EADJA,OAAQiB,EACJ,EADIA,UAAWC,EACf,EADeA,cAAejB,EAC9B,EAD8BA,WAElC,EAA4BC,oBAAS,GAArC,mBAAOiB,EAAP,KAAerB,EAAf,KAEA,OACE,uBAAMa,UAAU,mBAAhB,UACE,mBAAGA,UAAU,UAAb,SACE,sBAAMA,UAAU,SAAhB,SACE,yBACE,UAAQ,eACRS,MAAOpB,EACPqB,SAAU,SAACC,GAAD,OAAOL,EAAUK,EAAEC,OAAOH,QAHtC,UAKE,wBAAQA,MAAM,MAAd,iBACA,wBAAQA,MAAM,SAAd,oBACA,wBAAQA,MAAM,YAAd,8BAKN,oBAAGT,UAAU,qDAAb,UACE,uBACE,UAAQ,cACRG,KAAK,OACLH,UAAU,QACVa,YAAY,YACZJ,MAAOnB,EACPoB,SAAU,SAACC,GACTJ,EAAcI,EAAEC,OAAOH,OACvBtB,GAAU,MAGd,sBAAMa,UAAU,eAAhB,SACE,mBAAGA,UAAU,8BAGf,sBAAMA,UAAU,gBAAgBc,MAAO,CAAEC,cAAe,OAAxD,SAEGP,GACC,wBACE,UAAQ,oBACRL,KAAK,SACLH,UAAU,SACVI,QAAS,WACPG,EAAc,IACdpB,GAAU,IAEZ,aAAW,0BCvDZ6B,G,MAAmB,kBAC9B,qBAAKhB,UAAU,SAAS,UAAQ,SAAhC,SACE,qBAAKA,UAAU,wBCYNiB,EAA6B,SAAC,GAAyB,IAAvB9B,EAAsB,EAAtBA,UAAWS,EAAW,EAAXA,KACtD,EAA8BL,oBAAS,GAAvC,mBAAO2B,EAAP,KAAgBC,EAAhB,KACA,EAAwB5B,mBAAsB,MAA9C,mBAAO6B,EAAP,KAAaC,EAAb,KAyBA,OAtBA3B,qBAAU,WACRb,YAAW,WACTsC,GAAW,KACV,OACF,IAEHzB,qBAAU,WJFW,IAAC4B,EIGhB1B,QAAwB2B,IAAhB3B,EAAK0B,QJHGA,EIIV1B,EAAK0B,OJJoC/C,EAAG,iBAAiB+C,KIKlExC,MAAK,SAAC0C,GACLH,EAAQG,GACRL,GAAW,MAEZM,OAAM,SAACC,GAEN,MADAP,GAAW,GACL,IAAIQ,MAAM,aAAcD,MAGlCP,GAAW,KAEZ,CAACvB,IAGF,sBAAKI,UAAU,kBAAkB,UAAQ,QAAzC,UACE,qBAAKA,UAAU,qBAEdkB,EACC,cAAC,EAAD,IAEA,sBAAKlB,UAAU,aAAf,UACE,yBAAQA,UAAU,kBAAlB,UACE,sBACEA,UAAU,0CACV,UAAQ,eAFV,0BAKGJ,QALH,IAKGA,OALH,EAKGA,EAAMM,MAIT,wBACEC,KAAK,SACLH,UAAU,SACV,UAAQ,cACRI,QAAS,kBAAMjB,GAAU,SAI7B,sBAAKa,UAAU,kBAAf,UACE,mBAAGA,UAAU,QAAQ,UAAQ,cAA7B,gBACGJ,QADH,IACGA,OADH,EACGA,EAAMC,QAGRuB,GACC,8BACE,oBAAGpB,UAAU,QAAQ,UAAQ,aAA7B,UACE,wBAAQA,UAAU,kBAAlB,qBAGC,IAJH,KAMG,IACD,mBAAG4B,KAAI,iBAAYR,EAAKS,OAAxB,SAAkCT,EAAKU,sBCzE5CC,EAAgB,WAC3B,MAA8BxC,oBAAS,GAAvC,mBAAO2B,EAAP,KAAgBC,EAAhB,KACA,EAA4B5B,oBAAS,GAArC,mBAAOiB,EAAP,KAAerB,EAAf,KACA,EAAwCI,mBAAsB,MAA9D,mBAAOyC,EAAP,KAAqB5C,EAArB,KAEA,EAA4BG,mBAAS,OAArC,mBAAOF,EAAP,KAAeiB,EAAf,KAEA,EAAoCf,mBAAS,IAA7C,mBAAOD,EAAP,KAAmBiB,EAAnB,KAcA,OAZAb,qBAAU,WACRb,YAAW,WACTsC,GAAW,KACV,OACF,IASD,qCACE,qBAAKnB,UAAU,UAAf,SACE,qBAAKA,UAAU,YAAf,SACE,sBAAKA,UAAU,MAAf,UACE,oBAAIA,UAAU,QAAd,oBAEA,qBAAKA,UAAU,QAAf,SACE,cAAC,EAAD,CAAYX,OAAQA,EAAQiB,UAAWA,EAAWC,cAAeA,EAAejB,WAAYA,MAG9F,qBAAKU,UAAU,QAAf,SACGkB,EAAU,cAAC,EAAD,IAAa,cAAC,EAAD,CAAU5B,WAAYA,EAAYD,OAAQA,EAAQF,UAAWA,EAAWC,gBAAiBA,aAMxHoB,GAAU,cAAC,EAAD,CAAWrB,UAAWA,EAAWS,KAAMoC,QC/CxDC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.540e1b36.chunk.js","sourcesContent":["import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\n// This function creates a promise\n// that is resolved after a given delay\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  // we add some delay to see how the loader works\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number | undefined) => get<User>(`/users/${userId}`);\n","import React, {\n  Dispatch,\n  SetStateAction,\n  useEffect,\n  useState,\n} from 'react';\nimport { getTodos } from '../../api';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  setHandle: Dispatch<SetStateAction<boolean>>,\n  setSelectedTodo: Dispatch<SetStateAction<Todo | null>>,\n  filter: string,\n  searchText: string,\n};\n\n// eslint-disable-next-line max-len\nexport const TodoList: React.FC<Props> = ({\n  setHandle, setSelectedTodo, filter, searchText,\n}) => {\n  const [todos, setTodos] = useState<Todo[]>([]);\n\n  useEffect(() => {\n    getTodos().then(json => {\n      setTodos(json);\n    });\n  });\n\n  const filteredTodos = todos.filter((todo) => {\n    if (filter === 'all') {\n      return todo.title.includes(searchText);\n    }\n\n    if (filter === 'completed') {\n      return todo.completed && todo.title.includes(searchText);\n    }\n\n    if (filter === 'active') {\n      return !todo.completed && todo.title.includes(searchText);\n    }\n\n    return true;\n  });\n\n  return (\n    <table className=\"table is-narrow is-fullwidth\">\n      <thead>\n        <tr>\n          <th>#</th>\n          <th>\n            <span className=\"icon\">\n              <i className=\"fas fa-check\" />\n            </span>\n          </th>\n          <th>Title</th>\n          <th> </th>\n        </tr>\n      </thead>\n\n      <tbody>\n\n        {filteredTodos?.map(todo => {\n          return (\n            <tr\n              key={todo.id}\n              data-cy=\"todo\"\n            >\n              <td className=\"is-vcentered\">{todo.id}</td>\n              <td className=\"is-vcentered\">\n                {todo.completed === true\n                && (\n                  <span className=\"icon\" data-cy=\"iconCompleted\">\n                    <i className=\"fas fa-check\" />\n                  </span>\n                )}\n              </td>\n              <td className=\"is-vcentered is-expanded\">\n                <p\n                  className={\n                    (todo.completed === true)\n                      ? 'has-text-success'\n                      : 'has-text-danger'\n                  }\n                  // style={\n                  //   (todo.completed === true)\n                  //     ? { color: 'green' }\n                  //     : { color: 'red' }\n                  // }\n                >\n                  {todo.title}\n                </p>\n              </td>\n              <td className=\"has-text-right is-vcentered\">\n                <button\n                  data-cy=\"selectButton\"\n                  className=\"button\"\n                  type=\"button\"\n                  onClick={\n                    () => {\n                      setHandle(true);\n                      setSelectedTodo(todo);\n                    }\n                  }\n                >\n                  <span className=\"icon\">\n                    <i className=\"far fa-eye\" />\n                  </span>\n                </button>\n              </td>\n            </tr>\n          );\n        })}\n\n      </tbody>\n    </table>\n  );\n};\n","import React, { Dispatch, SetStateAction, useState } from 'react';\n\ntype Props = {\n  filter: string,\n  setFilter: Dispatch<SetStateAction<string>>;\n  setSearchText: Dispatch<SetStateAction<string>>,\n  searchText: string,\n};\n\n// eslint-disable-next-line max-len\nexport const TodoFilter: React.FC<Props> = ({\n  filter, setFilter, setSearchText, searchText,\n}) => {\n  const [handle, setHandle] = useState(false);\n\n  return (\n    <form className=\"field has-addons\">\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            value={filter}\n            onChange={(e) => setFilter(e.target.value)}\n          >\n            <option value=\"all\">All</option>\n            <option value=\"active\">Active</option>\n            <option value=\"completed\">Completed</option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={searchText}\n          onChange={(e) => {\n            setSearchText(e.target.value);\n            setHandle(true);\n          }}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n          {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n          {handle && (\n            <button\n              data-cy=\"clearSearchButton\"\n              type=\"button\"\n              className=\"delete\"\n              onClick={() => {\n                setSearchText('');\n                setHandle(false);\n              }}\n              aria-label=\"Clear Search\"\n            />\n          )}\n        </span>\n      </p>\n    </form>\n  );\n};\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import React,\n{\n  useState,\n  useEffect,\n  Dispatch,\n  SetStateAction,\n} from 'react';\nimport { Loader } from '../Loader';\nimport { Todo } from '../../types/Todo';\nimport { User } from '../../types/User';\nimport { getUser } from '../../api';\n\ntype Props = {\n  setHandle: Dispatch<SetStateAction<boolean>>,\n  todo: Todo | null;\n};\n\nexport const TodoModal: React.FC<Props> = ({ setHandle, todo }) => {\n  const [loading, setLoading] = useState(true);\n  const [user, setUser] = useState<User | null>(null);\n  // const [details, setDetails] = useState(false);\n\n  useEffect(() => {\n    setTimeout(() => {\n      setLoading(false);\n    }, 1000);\n  }, []);\n\n  useEffect(() => {\n    if (todo && todo.userId !== undefined) {\n      getUser(todo.userId)\n        .then((userData) => {\n          setUser(userData);\n          setLoading(false);\n        })\n        .catch((error) => {\n          setLoading(false);\n          throw new Error('user error', error);\n        });\n    } else {\n      setLoading(false);\n    }\n  }, [todo]);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {loading ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              Todo #\n              {todo?.id}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={() => setHandle(false)}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {todo?.title}\n            </p>\n\n            {user && (\n              <div>\n                <p className=\"block\" data-cy=\"modal-user\">\n                  <strong className=\"has-text-danger\">\n                    Planned\n                  </strong>\n                  {' '}\n                  by\n                  {' '}\n                  <a href={`mailto:${user.email}`}>{user.name}</a>\n                  {/* <button\n                    className=\"button\"\n                    type=\"button\"\n                    onClick={() => setDetails(true)}\n                  >\n                    {user.name}\n                  </button> */}\n                </p>\n\n                {/* {details && user && (\n                  <div>\n                    <p>{user?.name}</p>\n                    <p>{user?.phone}</p>\n                    <p>{user?.email}</p>\n                  </div>\n                )} */}\n              </div>\n            )}\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport React, { useState, useEffect } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { Todo } from './types/Todo';\n\nexport const App: React.FC = () => {\n  const [loading, setLoading] = useState(true);\n  const [handle, setHandle] = useState(false);\n  const [selectedTodo, setSelectedTodo] = useState<Todo | null>(null);\n\n  const [filter, setFilter] = useState('all');\n\n  const [searchText, setSearchText] = useState('');\n\n  useEffect(() => {\n    setTimeout(() => {\n      setLoading(false);\n    }, 3000);\n  }, []);\n\n  // function handleClose() {\n  //   setClose({\n  //     handle: true,\n  //   });\n  // }\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter filter={filter} setFilter={setFilter} setSearchText={setSearchText} searchText={searchText} />\n            </div>\n\n            <div className=\"block\">\n              {loading ? <Loader /> : <TodoList searchText={searchText} filter={filter} setHandle={setHandle} setSelectedTodo={setSelectedTodo} />}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {handle && <TodoModal setHandle={setHandle} todo={selectedTodo} />}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}