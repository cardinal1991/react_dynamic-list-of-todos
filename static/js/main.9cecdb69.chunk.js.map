{"version":3,"sources":["components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","api.ts","types/Todo.ts","components/TodoModal/TodoModal.tsx","App.tsx","components/filteredTodos/filteredTodos.tsx","index.tsx"],"names":["TodoList","setSelectedTodo","selectedTodo","filteredTodos","className","map","todo","id","completed","title","type","onClick","handleClick","cn","TodoFilter","filter","setFilter","setSearchText","searchText","useState","isClear","setIsClear","value","onChange","e","target","placeholder","Loader","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","Filter","TodoModal","loading","setLoading","user","setUser","useEffect","userId","undefined","userData","catch","Error","href","email","name","App","All","todos","setTodos","includes","toLowerCase","trim","filterTodos","length","ReactDOM","render","document","getElementById"],"mappings":"oPAaaA,EAA4B,SAAC,GAInC,IAHLC,EAGI,EAHJA,gBACAC,EAEI,EAFJA,aACAC,EACI,EADJA,cAMA,OACE,wBAAOC,UAAU,+BAAjB,UACE,gCACE,+BACE,mCACA,6BACE,sBAAMA,UAAU,OAAhB,SACE,mBAAGA,UAAU,qBAGjB,uCACA,wCAIJ,uCAEGD,QAFH,IAEGA,OAFH,EAEGA,EAAeE,KAAI,SAAAC,GAAI,OACtB,qBAEE,UAAQ,OAFV,UAIE,oBAAIF,UAAU,eAAd,SAA8BE,EAAKC,KACnC,oBAAIH,UAAU,eAAd,SACGE,EAAKE,WACJ,sBAAMJ,UAAU,OAAO,UAAQ,gBAA/B,SACE,mBAAGA,UAAU,qBAInB,oBAAIA,UAAU,2BAAd,SACE,mBACEA,UAAWE,EAAKE,UACZ,mBAAqB,kBAF3B,SAIGF,EAAKG,UAGV,oBAAIL,UAAU,8BAAd,SACE,wBACE,UAAQ,eACRA,UAAU,SACVM,KAAK,SACLC,QAAS,kBA/CvB,SAAqBL,GACnBL,EAAgBK,GA8CWM,CAAYN,IAJ7B,SAME,sBAAMF,UAAU,OAAhB,SACE,mBAAGA,UAAWS,IAAG,MAAO,CACtB,UAAsB,OAAZX,QAAY,IAAZA,OAAA,EAAAA,EAAcK,MAAOD,EAAKC,GACpC,gBAA4B,OAAZL,QAAY,IAAZA,OAAA,EAAAA,EAAcK,MAAOD,EAAKC,eA7B7CD,EAAKC,aChCTO,EAA8B,SAAC,GAErC,IADLC,EACI,EADJA,OAAQC,EACJ,EADIA,UAAWC,EACf,EADeA,cAAeC,EAC9B,EAD8BA,WAElC,EAA8BC,oBAAS,GAAvC,mBAAOC,EAAP,KAAgBC,EAAhB,KAEA,OACE,uBAAMjB,UAAU,mBAAhB,UACE,mBAAGA,UAAU,UAAb,SACE,sBAAMA,UAAU,SAAhB,SACE,yBACE,UAAQ,eACRkB,MAAOP,EACPQ,SAAU,SAACC,GAAD,OAAOR,EAAUQ,EAAEC,OAAOH,QAHtC,UAKE,wBAAQA,MAAM,MAAd,iBACA,wBAAQA,MAAM,SAAd,oBACA,wBAAQA,MAAM,YAAd,8BAKN,oBAAGlB,UAAU,qDAAb,UACE,uBACE,UAAQ,cACRM,KAAK,OACLN,UAAU,QACVsB,YAAY,YACZJ,MAAOJ,EACPK,SAAU,SAACC,GACTP,EAAcO,EAAEC,OAAOH,OACA,KAAnBE,EAAEC,OAAOH,MACXD,GAAW,GAEXA,GAAW,MAIjB,sBAAMjB,UAAU,eAAhB,SACE,mBAAGA,UAAU,8BAGf,sBAAMA,UAAU,gBAAhB,SACGgB,GACC,wBACE,UAAQ,oBACRV,KAAK,SACLN,UAAU,SACVO,QAAS,WACPM,EAAc,IACdI,GAAW,IAEb,aAAW,0BCzDZM,G,MAAmB,kBAC9B,qBAAKvB,UAAU,SAAS,UAAQ,SAAhC,SACE,qBAAKA,UAAU,wBCSnB,SAASwB,EAAOC,GAEd,IARYC,EAQNC,EAZS,iEAYYF,EAAM,QAGjC,OAXYC,EAWA,IAVL,IAAIE,SAAQ,SAAAC,GACjBC,WAAWD,EAASH,OAUnBK,MAAK,kBAAMC,MAAML,MACjBI,MAAK,SAAAE,GAAG,OAAIA,EAAIC,UAGd,ICjBKC,ECUCC,EAA6B,SAAC,GAEpC,IADLlC,EACI,EADJA,KAAML,EACF,EADEA,gBAEN,EAA8BkB,oBAAS,GAAvC,mBAAOsB,EAAP,KAAgBC,EAAhB,KACA,EAAwBvB,mBAAsB,MAA9C,mBAAOwB,EAAP,KAAaC,EAAb,KAgBA,OAdAC,qBAAU,WFGW,IAACC,EEFhBxC,QAAwByC,IAAhBzC,EAAKwC,QFEGA,EEDVxC,EAAKwC,OFCwBlB,EAAG,iBAAiBkB,KEAtDX,MAAK,SAACa,GACLJ,EAAQI,GACRN,GAAW,MACVO,OAAM,WACP,MAAM,IAAIC,MAAM,kBAGpBR,GAAW,KAEZ,CAACpC,IAGF,sBAAKF,UAAU,kBAAkB,UAAQ,QAAzC,UACE,qBAAKA,UAAU,qBAEdqC,EACC,cAAC,EAAD,IAEA,sBAAKrC,UAAU,aAAf,UACE,yBAAQA,UAAU,kBAAlB,UACE,sBACEA,UAAU,0CACV,UAAQ,eAFV,0BAKGE,QALH,IAKGA,OALH,EAKGA,EAAMC,MAGT,wBACEG,KAAK,SACLN,UAAU,SACV,UAAQ,cACR,aAAW,eACXO,QAAS,kBAAMV,EAAgB,YAInC,sBAAKG,UAAU,kBAAf,UACE,mBAAGA,UAAU,QAAQ,UAAQ,cAA7B,gBACGE,QADH,IACGA,OADH,EACGA,EAAMG,QAGRkC,GACC,8BACE,oBAAGvC,UAAU,QAAQ,UAAQ,aAA7B,UACE,wBAAQA,UAAU,kBAAlB,qBAGC,IAJH,KAMG,IACD,mBAAG+C,KAAI,iBAAYR,EAAKS,OAAxB,SAAkCT,EAAKU,uB,SDtE7Cd,K,UAAAA,E,sBAAAA,E,iBAAAA,M,KEML,IAAMe,EAAgB,WAC3B,MAAwCnC,mBAAsB,MAA9D,mBAAOjB,EAAP,KAAqBD,EAArB,KACA,EAA4BkB,mBAAiBoB,EAAOgB,KAApD,mBAAOxC,EAAP,KAAeC,EAAf,KACA,EAAoCG,mBAAS,IAA7C,mBAAOD,EAAP,KAAmBD,EAAnB,KACA,EAA0BE,mBAAiB,IAA3C,mBAAOqC,EAAP,KAAcC,EAAd,KAEMtD,ECXD,YAA2D,IAApCY,EAAmC,EAAnCA,OAAQG,EAA2B,EAA3BA,WAgBpC,OAhB+D,EAAfsC,MACpBzC,QAAO,SAACT,GAClC,OAAQS,GACN,IAAK,MACH,OAAOT,EAAKG,MAAMiD,SAASxC,EAAWyC,cAAcC,QACtD,IAAK,YACH,OAAOtD,EAAKE,WACTF,EAAKG,MAAMiD,SAASxC,EAAWyC,cAAcC,QAClD,IAAK,SACH,OAAQtD,EAAKE,WACVF,EAAKG,MAAMiD,SAASxC,EAAWyC,cAAcC,QAClD,QACE,OAAO,MDDSC,CAAY,CAAEL,QAAOzC,SAAQG,eAUnD,OARA2B,qBAAU,WHGkBjB,EAAY,UGF3BO,MAAK,SAAAG,GACdmB,EAASnB,MACRW,OAAM,WACP,MAAM,IAAIC,MAAM,cAEjB,IAGD,qCACE,qBAAK9C,UAAU,UAAf,SACE,qBAAKA,UAAU,YAAf,SACE,sBAAKA,UAAU,MAAf,UACE,oBAAIA,UAAU,QAAd,oBAEA,qBAAKA,UAAU,QAAf,SACE,cAAC,EAAD,CAAYW,OAAQA,EAAQC,UAAWA,EAAWC,cAAeA,EAAeC,WAAYA,MAG9F,qBAAKd,UAAU,QAAf,UACS,OAALoD,QAAK,IAALA,OAAA,EAAAA,EAAOM,QAAS,EACd,cAAC,EAAD,CAAU3D,cAAeA,EAAeD,aAAcA,EAAcD,gBAAiBA,IACrF,cAAC,EAAD,aAMM,OAAjBC,GAAyB,cAAC,EAAD,CAAWI,KAAMJ,EAAcD,gBAAiBA,QE9ChF8D,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.9cecdb69.chunk.js","sourcesContent":["import React, {\n  Dispatch,\n  SetStateAction,\n} from 'react';\nimport cn from 'classnames';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  filteredTodos: Todo[],\n  selectedTodo: Todo | null,\n  setSelectedTodo: Dispatch<SetStateAction<Todo | null>>,\n};\n\nexport const TodoList: React.FC<Props> = ({\n  setSelectedTodo,\n  selectedTodo,\n  filteredTodos,\n}) => {\n  function handleClick(todo: Todo) {\n    setSelectedTodo(todo);\n  }\n\n  return (\n    <table className=\"table is-narrow is-fullwidth\">\n      <thead>\n        <tr>\n          <th>#</th>\n          <th>\n            <span className=\"icon\">\n              <i className=\"fas fa-check\" />\n            </span>\n          </th>\n          <th>Title</th>\n          <th> </th>\n        </tr>\n      </thead>\n\n      <tbody>\n\n        {filteredTodos?.map(todo => (\n          <tr\n            key={todo.id}\n            data-cy=\"todo\"\n          >\n            <td className=\"is-vcentered\">{todo.id}</td>\n            <td className=\"is-vcentered\">\n              {todo.completed && (\n                <span className=\"icon\" data-cy=\"iconCompleted\">\n                  <i className=\"fas fa-check\" />\n                </span>\n              )}\n            </td>\n            <td className=\"is-vcentered is-expanded\">\n              <p\n                className={todo.completed\n                  ? 'has-text-success' : 'has-text-danger'}\n              >\n                {todo.title}\n              </p>\n            </td>\n            <td className=\"has-text-right is-vcentered\">\n              <button\n                data-cy=\"selectButton\"\n                className=\"button\"\n                type=\"button\"\n                onClick={() => handleClick(todo)}\n              >\n                <span className=\"icon\">\n                  <i className={cn('far', {\n                    'fa-eye': selectedTodo?.id !== todo.id,\n                    'fa-eye-slash': selectedTodo?.id === todo.id,\n                  })}\n                  />\n                </span>\n              </button>\n            </td>\n          </tr>\n        ))}\n\n      </tbody>\n    </table>\n  );\n};\n","import React, { Dispatch, SetStateAction, useState } from 'react';\nimport { Filter } from '../../types/Todo';\n\ntype Props = {\n  filter: Filter,\n  setFilter: Dispatch<SetStateAction<Filter>>;\n  setSearchText: Dispatch<SetStateAction<string>>,\n  searchText: string,\n};\nexport const TodoFilter: React.FC<Props> = ({\n  filter, setFilter, setSearchText, searchText,\n}) => {\n  const [isClear, setIsClear] = useState(false);\n\n  return (\n    <form className=\"field has-addons\">\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            value={filter}\n            onChange={(e) => setFilter(e.target.value as Filter)}\n          >\n            <option value=\"all\">All</option>\n            <option value=\"active\">Active</option>\n            <option value=\"completed\">Completed</option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={searchText}\n          onChange={(e) => {\n            setSearchText(e.target.value);\n            if (e.target.value !== '') {\n              setIsClear(true);\n            } else {\n              setIsClear(false);\n            }\n          }}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        <span className=\"icon is-right\">\n          {isClear && (\n            <button\n              data-cy=\"clearSearchButton\"\n              type=\"button\"\n              className=\"delete\"\n              onClick={() => {\n                setSearchText('');\n                setIsClear(false);\n              }}\n              aria-label=\"Clear Search\"\n            />\n          )}\n        </span>\n      </p>\n    </form>\n  );\n};\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\n// This function creates a promise\n// that is resolved after a given delay\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  // we add some delay to see how the loader works\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","export interface Todo {\n  id: number;\n  title: string;\n  completed: boolean;\n  userId: number;\n}\n\nexport enum Filter {\n  All = 'all',\n  Completed = 'completed',\n  Active = 'active',\n}\n","import React,\n{\n  useState,\n  useEffect,\n  Dispatch,\n  SetStateAction,\n} from 'react';\nimport { Loader } from '../Loader';\nimport { Todo } from '../../types/Todo';\nimport { User } from '../../types/User';\nimport { getUser } from '../../api';\n\ntype Props = {\n  todo: Todo | null;\n  setSelectedTodo: Dispatch<SetStateAction<Todo | null>>,\n};\n\nexport const TodoModal: React.FC<Props> = ({\n  todo, setSelectedTodo,\n}) => {\n  const [loading, setLoading] = useState(true);\n  const [user, setUser] = useState<User | null>(null);\n\n  useEffect(() => {\n    if (todo && todo.userId !== undefined) {\n      getUser(todo.userId)\n        .then((userData) => {\n          setUser(userData);\n          setLoading(false);\n        }).catch(() => {\n          throw new Error('error modal');\n        });\n    } else {\n      setLoading(false);\n    }\n  }, [todo]);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {loading ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              Todo #\n              {todo?.id}\n            </div>\n\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              aria-label=\"close-button\"\n              onClick={() => setSelectedTodo(null)}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {todo?.title}\n            </p>\n\n            {user && (\n              <div>\n                <p className=\"block\" data-cy=\"modal-user\">\n                  <strong className=\"has-text-danger\">\n                    Planned\n                  </strong>\n                  {' '}\n                  by\n                  {' '}\n                  <a href={`mailto:${user.email}`}>{user.name}</a>\n                </p>\n              </div>\n            )}\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport React, { useEffect, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { Todo, Filter } from './types/Todo';\nimport { getTodos } from './api';\nimport { filterTodos } from './components/filteredTodos/filteredTodos';\n\nexport const App: React.FC = () => {\n  const [selectedTodo, setSelectedTodo] = useState<Todo | null>(null);\n  const [filter, setFilter] = useState<Filter>(Filter.All);\n  const [searchText, setSearchText] = useState('');\n  const [todos, setTodos] = useState<Todo[]>([]);\n\n  const filteredTodos = filterTodos({ todos, filter, searchText });\n\n  useEffect(() => {\n    getTodos().then(json => {\n      setTodos(json);\n    }).catch(() => {\n      throw new Error('error');\n    });\n  }, []);\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter filter={filter} setFilter={setFilter} setSearchText={setSearchText} searchText={searchText} />\n            </div>\n\n            <div className=\"block\">\n              {(todos?.length > 0)\n                ? <TodoList filteredTodos={filteredTodos} selectedTodo={selectedTodo} setSelectedTodo={setSelectedTodo} />\n                : <Loader />}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {selectedTodo !== null && <TodoModal todo={selectedTodo} setSelectedTodo={setSelectedTodo} />}\n    </>\n  );\n};\n","import { Filter, Todo } from '../../types/Todo';\n\ntype Args = {\n  todos: Todo[],\n  filter: Filter,\n  searchText: string,\n};\n\nexport function filterTodos({ filter, searchText, todos }: Args) {\n  const filteredTodos = todos.filter((todo) => {\n    switch (filter) {\n      case 'all':\n        return todo.title.includes(searchText.toLowerCase().trim());\n      case 'completed':\n        return todo.completed\n        && todo.title.includes(searchText.toLowerCase().trim());\n      case 'active':\n        return !todo.completed\n        && todo.title.includes(searchText.toLowerCase().trim());\n      default:\n        return true;\n    }\n  });\n\n  return filteredTodos;\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}